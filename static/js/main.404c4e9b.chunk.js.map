{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","robots.js","Scroll.js","ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","alt","src","id","name","username","email","cardlist","cardcomponent","robots","map","user","i","key","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","CardList","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.404c4e9b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=(props)=>{\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robot' src={`https://robohash.org/${props.id}?size=200x200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>id={props.id}</p>\r\n                <p>@{props.username}</p>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card';\r\n\r\nconst cardlist=({robots})=>{\r\n    const cardcomponent=robots.map((user,i)=>{\r\n        return  <Card key={i} id={user.id} name={user.name} username={user.username} email={user.email}/>\r\n    })\r\n    return(<div>\r\n        {cardcomponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default cardlist;","import React from 'react';\r\n\r\nconst SearchBox=({onSearchChange})=>{\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue' \r\n                type='search' \r\n                placeholder='search'\r\n                onChange={onSearchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;"," const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n\nexport default robots;\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow:'scroll', border: '5px solid black',height: '510px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (\r\n                <div><h1>Ooops... That is not Good</h1></div>\r\n            );\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport robots from './robots';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundary from './ErrorBoundary';\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots:robots,\r\n            searchfield:''\r\n        }\r\n    }\r\n\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchfield:event.target.value});\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=>response.json).then(users=>this.state.robots=users);\r\n    }\r\n    \r\n    render(){\r\n        const filteredRobots=this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        return(\r\n            <div className='tc'>\r\n                <h1>ROBOFRIENDS</h1>\r\n                <SearchBox onSearchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                      <CardList robots={filteredRobots}/>\r\n                      </ErrorBoundary>                    \r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<div><App/></div> ,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}